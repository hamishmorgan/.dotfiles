#!/usr/bin/env bash
# Clean temporary development files

set -o pipefail

readonly GREEN='\033[0;32m'
readonly BLUE='\033[0;34m'
readonly NC='\033[0m'

log_info() {
  echo -e "${BLUE}●${NC} $1"
}

log_success() {
  echo -e "${GREEN}✓${NC} $1"
}

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
REPO_ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"

main() {
  local cleaned=0

  log_info "Cleaning temporary development files..."

  # Clean test artifacts
  if [[ -d "$REPO_ROOT/tests/.tmp" ]]; then
    rm -rf "$REPO_ROOT/tests/.tmp"
    log_success "Removed tests/.tmp"
    ((cleaned++))
  fi

  # Clean temp proposal files
  if ls /tmp/env_vars*.md &> /dev/null || ls /tmp/style_analysis.md &> /dev/null; then
    rm -f /tmp/env_vars*.md /tmp/style_analysis.md
    log_success "Removed /tmp proposal files"
    ((cleaned++))
  fi

  # Clean Docker/Podman build cache (if requested)
  if [[ "$1" == "--docker" ]]; then
    if command -v docker &> /dev/null; then
      docker system prune -f > /dev/null 2>&1
      log_success "Cleaned Docker cache"
      ((cleaned++))
    elif command -v podman &> /dev/null; then
      podman system prune -f > /dev/null 2>&1
      log_success "Cleaned Podman cache"
      ((cleaned++))
    fi
  fi

  if [[ $cleaned -eq 0 ]]; then
    log_success "No temporary files to clean"
  else
    log_success "Cleaned $cleaned item(s)"
  fi
}

main "$@"

